workflowsSpec: 1.0.0
info:
  title: A simple single company single API workflow idea
  summary: Single API workflow
  description: |
    This example is to illustrate how a company might provide a workflow using a single API they provide
  version: 1.0.0
sourceDocuments:
  - name: geolocationAPI
    url: https://raw.githubusercontent.com/postman-open-technologies/apis/main/oapi-workflows/demo/weather/api/geolocation.yaml
    type: openapi
  - name: weatherAPI
    url: https://raw.githubusercontent.com/postman-open-technologies/apis/main/oapi-workflows/demo/weather/api/weather.yaml
    type: openapi
  - name: triggerAPI
    url: https://raw.githubusercontent.com/postman-open-technologies/apis/main/oapi-workflows/demo/weather/api/trigger.yaml
    type: openapi

workflows:
  - workflowId: GetWeatherForGeoLocation
    summary: Get weather for geolocation
    description: This workflow will get the geolocation info for the consumer request (e.g. using the request details) and return the weather for that location.
    inputs:
      type: object
      properties:
        geolocation_api_key:
          type: string
        weather_api_key:
          type: string
    steps:
      - stepId: getGeoLocationDetails
        description: Using the Request details that are provided by the typical http request info, retrieve the geo details
        operationId: geolocationAPI.getGeoLocationDetails
        parameters:
          # parameters to inject into the loginUser operation (parameter name must be resolvable at the referenced operation and the value is determined using {expression} syntax)
          - name: apikey
            in: query
            value: $inputs.geolocation_api_key
        successCriteria:
          # assertions to determine step was successful
          - $statusCode == 200
        outputs:
          # outputs from this step
          longitude: $response.body.longitude
          latitude: $response.body.latitude
      - stepId: getWeatherForLongLat
        description: Retrieves the weather details for the provided longitude and latitude
        operationId: weatherAPI.getWeatherDetailsForGeoLocation
        dependsOn: loginStep
        parameters:
          - name: status
            in: query
            value: 'available'
          - name: Authorization
            in: header
            value: $steps.loginUser.outputs.sessionToken
        successCriteria:
          - $statusCode == 200
        outputs:
          # outputs from this step
          availablePets: $response.body
    outputs:
      available: $steps.getPetStep.availablePets